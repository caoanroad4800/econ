update.packages("")
update.packages()
5*1.8+3*2.1+5*3.4+5*2.4+5*2.9+3*2.1+5*1.9
(5*1.8+3*2.1+5*3.4+5*2.4+5*2.9+3*2.1+5*1.9)/31
9+6.3+17+12+14.5+6.3+9.5
824876.45-630000
tan(90)
tan(1)
tan(x)
pi
x=seq(0,pi,by=0.001)
y=tan(x)
plot(y~x)
x=seq(0,1/2pi,by=0.01)
y=tan(x)
plot(y~x)
x=seq(0,1/2 pi,by=0.01)
y=tan(x)
plot(y~x)
x=seq(0,1/2*pi,by=0.01)
y=tan(x)
plot(y~x)
tan(pi)
tan(1/2*pi)
tan(1/4*pi)
coef=0.9;
h=seq(0,100,1)
IRF=NULL;
IRF=coef^h
plot(IRF~h,type="l")
coef=0.9;
h=seq(0,20,1)
IRF=NULL;
IRF=coef^h
plot(IRF~h,type="l")
?"matrix"
A=matrix(c(0.7,0.2,0.5,0.3), nrow=2, ncol=2)
A
A=matrix(c(0.7,0.5,0.2,0.3), nrow=2, ncol=2)
A
A=matrix(c(0.7,0.5,0.2,0.3), nrow=2, ncol=2)
B=matrix(c(1,-0.2,0.3,1), nrow=2, ncol=2)
B
IRF1=A^0.9
IRF1
h=seq(1,100,1)
h
B[:,1]
B(,1)
B
B[,1]
IRF1=A^(h-1) * B[,1]
A^(h-1)
A^5
A^(5)*B
A^(5)*B[,1]
0.0286 * 0.0286
update.packages("")
update.packages()
240+160+80
480*16
480*16*4
phi = seq(0.001,0.999,by=0.001)
beta = 0.99
slope = (1-phi) * (1-phi * beta)/phi
plot(slope ~ phi, type="l")
setwd("~/Documents/Programs/Projects/BNK/")
phi = 0.75
epsilon = 10
beta = 0.99
pi = seq(-0.02,0.02,by=0.001)
pisharp = (((1+pi)^(1-epsilon)-phi)/(1-phi))^(1/(1-epsilon))-1
nup=((1-phi) * ((1+pi)/(1+pisharp))^(epsilon))/(1-phi * (1+pi)^(epsilon))
library(ggplot2)
library(Rmisc)
df1 <- data.frame(x=rep(pi,2),
y=c(pisharp,pi),
class=c(rep("pisharp",length(pisharp)),rep("pi",length(pi)))
)
p1=NULL;
p1 <- ggplot(data=df1,
aes(x=x,y=y,color=class))
p1 <- p1 + geom_point();
p1 <- p1 + labs(size= "Nitrogen",
x = "pi",
y = "pisharp",
title = "pisharp vs pi")
p1 <- p1 + theme(legend.position = 'bottom')
#p1
df2 <- data.frame(x=pi,
y=nup,
class=c(rep("pi",length(pi)),rep("nup",length(nup))))
p2=NULL;
p2 <- ggplot(data=df2,
aes(x=x,y=y))
p2 <- p2 + geom_point();
p2 <- p2 + labs(size= "Nitrogen",
x = "pi",
y = "nup",
title = "nup vs pi")
#p2
temp = ((1-phi*beta*(1+pi)^epsilon)/(1-phi*beta*(1+pi)^(epsilon-1)))*((1+pisharp)/(1+pi))
mc = temp * (epsilon-1)/epsilon
df3 <- data.frame(x=pi,
y=mc,
class=c(rep("pi",length(pi)),rep("mc",length(mc))))
p3=NULL;
p3 <- ggplot(data=df3,
aes(x=x,y=y))
p3 <- p3 + geom_point();
p3 <- p3 + labs(size= "Nitrogen",
x = "pi",
y = "marginal cost",
title = "mc vs pi")
inversemkupstatic=(epsilon-1)/epsilon
p3 <- p3 + geom_hline(yintercept=inversemkupstatic)
#p3
multiplot(p1,p2,p3,cols=3)
distortion=1/nup - mc
plot(distortion~pi)
distortion=1/nup - mc
df4 <- data.frame(x=pi,
y=distortion,
class=c(rep("pi",length(pi)),rep("distortion",length(distortion))))
p4=NULL;
p4 <- ggplot(data=df4,
aes(x=x,y=y))
p4 <- p4 + geom_point();
p4 <- p4 + labs(size= "Nitrogen",
x = "pi",
y = "mpn-mc",
title = "distortion vs pi")
p4
mc
1/nup
distortion=(1/nup) - mc
distortion
distortion=(1/nup) / mc
distortion
